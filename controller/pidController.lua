---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Will.
--- DateTime: 12/20/2020 6:04 PM
---

-- Gain properties will be automatically tweaked via AI these will be loaded from a cfg file

local Kp = 30 -- Proportional Gain
local Ki = 06 -- Integral Gain
local Kd = 75 -- Derivative Gain

local loopTicks = 10
local intErrTotal = 0
local integralMin = -200
local integralMax = 200


function pid(reactor)
    local rodPercentage = reactor.getControlRodLevel(1)
    local lastEnergyPoll = reactor.getEnergyProducedLastTick()
    local error = getRFUsage(reactor)
    local derivedError = getDerivativeError(lastEnergyPoll, reactor)
    local integratedError = getIntegratedError(error)

    local adjust = round(Kp * error + Ki * integratedError + Kd * derivedError, 0)

    local rodLevel = rodPercentage + adjust

    if rodLevel > 100 then
        rodLevel = 100
    end

    if rodLevel < 0 then
        rodLevel = 0
    end

    return rodLevel
end

function getRFUsage(reactor)
    local initialBuffer = reactor.getEnergyStored()
    sleep(0.05*loopTicks)
    local finalBuffer = reactor.getEnergyStored()

    return (finalBuffer - initialBuffer)/loopTicks
end

function getIntegratedError(error)
    intErrTotal = intErrTotal + error

    if intErrTotal > integralMax then
        intErrTotal = integralMax
    end

    if intErrTotal < integralMax then
        intErrTotal = integralMin
    end

    return intErrTotal
end

function round(num, places)
    local multiplier = 10^(places or 0)
    return math.floor(num * multiplier + 0.5)/multiplier
end

function getDerivativeError(lastEnergyPoll, reactor)
    local energyProduction = reactor.getEnergyProducedLastTick()
    return energyProduction - lastEnergyPoll
end


function getTime()
    return (os.time() * 1000 + 18000)%24000 -- Gives time in ticks
end
